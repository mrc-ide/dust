language: r
cache: packages
dist: xenial
sudo: required
r_packages:
  - covr
after_success:
  - Rscript -e 'covr::codecov(quiet = FALSE)'
before_script:
  - CUDA_VERSION_MAJOR="10"
  - CUDA_VERSION_MINOR="2"
  - CUDA_PKG_LONGVERSION="${CUDA_VERSION_MAJOR}.${CUDA_VERSION_MINOR}.89-1"
  - CUDA_PKG_VERSION="${CUDA_VERSION_MAJOR}-${CUDA_VERSION_MINOR}"
  - UBUNTU_VERSION=ubuntu1804
  - CUDA_REPO_PKG=cuda-repo-${UBUNTU_VERSION}_${CUDA_PKG_LONGVERSION}_amd64.deb
  - wget http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/$CUDA_REPO_PKG
  - travis_retry sudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/7fa2af80.pub
  - sudo dpkg -i $CUDA_REPO_PKG
  - rm ${CUDA_REPO_PKG}
  - travis_retry sudo apt-get -y update
  # cuda > 10.0 changed cublas naming
  - >
    if [ ${CUDA_VERSION_MAJOR} -lt 10 ]; then
        CUBLAS_PKG=cuda-cublas-dev-$CUDA_PKG_VERSION
    else
        CUBLAS_PKG=libcublas-dev
    fi
  - travis_retry sudo apt-get install -y --no-install-recommends --allow-unauthenticated cuda-compiler-$CUDA_PKG_VERSION  cuda-cudart-dev-$CUDA_PKG_VERSION  ${CUBLAS_PKG} cuda-curand-dev-$CUDA_PKG_VERSION
  - sudo ln -s /usr/local/cuda-${CUDA_VERSION_MAJOR}.${CUDA_VERSION_MINOR} /usr/local/cuda
  - export PATH=/usr/local/cuda/bin:$PATH
  - export LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH}
  - export LIBRARY_PATH=/usr/local/cuda/lib64:${LIBRARY_PATH}
  - ./scripts/update_cub
