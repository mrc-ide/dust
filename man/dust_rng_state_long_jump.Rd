% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rng.R
\name{dust_rng_state_long_jump}
\alias{dust_rng_state_long_jump}
\title{Advance a dust random number state}
\usage{
dust_rng_state_long_jump(state, times = 1L)
}
\arguments{
\item{state}{A raw vector representing \code{dust} random number
generator; see \code{\link{dust_rng}}.}

\item{times}{An integer indicating the number of times the
\code{long_jump} should be performed. The default is one, but values
larger than one will repeatedly advance the state.}
}
\value{
A raw vector of random number state, suitable to set into
a \code{dust} or \code{dust_rng} object, or for use as a seed.
}
\description{
Advance a saved random number state by performing a "long jump" on
it. If you have serialised the state using the \verb{$rng_state()}
method of a \code{\link{dust}} object but want create a new seed that is
uncorrelated.  If seed is extracted with \verb{$rng_seed()} is to be
reused multiple times, or if it will be used \emph{and} the source
object will also be used, then the state needs jumping to prevent
generating the same sequence of random numbers.
}
\examples{
# Create a new RNG object
rng <- dust::dust_rng$new(1)

# Serialise the state as a raw vector
state <- rng$state()

# We can advance this state
dust::dust_rng_state_long_jump(state)

# Which gives the same result as long_jump on the original generator
rng$long_jump()$state()
rng$long_jump()$state()

# Multiple jumps can be taken by using the "times" argument
dust::dust_rng_state_long_jump(state, 2)
}
