% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rng.R
\name{dust_rng_state_advance}
\alias{dust_rng_state_advance}
\title{Advance a dust random number state}
\usage{
dust_rng_state_advance(state, times = 1L)
}
\arguments{
\item{state}{A raw vector representing \code{dust} random number
generator; see \code{\link{dust_rng}}.}

\item{times}{An integer indicating the number of times the state
should be advanced. The default is one, but values larger than
one will repeatedly long jump the state.}
}
\description{
Advance a saved random number state by performing a "long jump" on
it. If you have serialised the state using the \verb{$rng_state()}
method of a \code{\link{dust}} object but want create a new seed that is
uncorrelated.  Ordinarily, if seed is extracted with
\verb{$rng_seed(advance = TRUE)}, then the state has already been
decoupled from your source object. But if you needed to reuse the
state several times, you should either collect the state at the
end of each run, or use this function to create a new, advanced,
state each time.
}
\examples{
# Create a new RNG object
rng <- dust::dust_rng$new(1)

# Serialise the state as a raw vector
state <- rng$state()

# We can advance this state
dust_rng_state_advance(state)

# Which gives the same result as long_jump on the original generator
rng$long_jump()$state()
rng$long_jump()$state()

# Multiple jumps can be taken by using the "times" argument
dust_rng_state_advance(state, 2)
}
