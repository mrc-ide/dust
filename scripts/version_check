#!/usr/bin/env bash
set -e
# Usage:
#   check_version [<version>]
#
# If version is not given as a positional argument, then we'll read it
# from the DESCRIPTION file.
#
# We assume that a version already exists as a tag.
VERSION=${1:-$(grep '^Version' DESCRIPTION  | sed 's/.*: *//')}
TAG="v${VERSION}"

echo "Proposed version number '$VERSION'"

if echo "$VERSION" | grep -Eq "[0-9]+[.][0-9]+[.][0-9]+"; then
    echo "[OK] Version number in correct format"
else
    echo "[ERROR] Invalid format version number '$VERSION' must be in format 'x.y.z'"
    exit 1
fi

EXIT_CODE=0

if git diff --quiet origin/master.. -- inst/include; then
    echo "Include files have not changed since last merge"
else
    echo "Include files have changed since last merge"
    PATH_VERSION_HPP=inst/include/dust/random/version.hpp
    VERSION_HPP=$(grep DUST_VERSION_STRING  $PATH_VERSION_HPP | cut -d' '  -f3)
    if [[ "$VERSION_HPP" == "$VERSION" ]]; then
        echo "[OK] $PATH_VERSION_HPP matches DESCRIPTION"
    else
        echo "[ERROR] $PATH_VERSION_HPP needs updating DESCRIPTION"
        EXIT_CODE=1
    fi
fi

echo "Updating remote git data"
git fetch

if git rev-parse "$TAG" >/dev/null 2>&1; then
    echo "[ERROR] Tag $TAG already exists - update version number"
    exit 1
else
    echo "[OK] Version number not yet present as git tag"
fi

MAJOR=$(echo $VERSION | cut -d. -f1)
MINOR=$(echo $VERSION | cut -d. -f2)
PATCH=$(echo $VERSION | cut -d. -f3)

BRANCH_DEFAULT=$(git remote show origin | awk '/HEAD branch/ {print $NF}')
LAST_TAG=$(git describe --tags --abbrev=0 "origin/${BRANCH_DEFAULT}")
LAST_VERSION=$(echo "$LAST_TAG" | sed 's/^v//')
LAST_MAJOR=$(echo $LAST_VERSION | cut -d. -f1)
LAST_MINOR=$(echo $LAST_VERSION | cut -d. -f2)
LAST_PATCH=$(echo $LAST_VERSION | cut -d. -f3)

if (( $MAJOR > $LAST_MAJOR )); then
    echo "[OK] Increasing MAJOR version"
    exit $EXIT_CODE
elif (( $MINOR > $LAST_MINOR )); then
    echo "[OK] Increasing MINOR version"
    exit $EXIT_CODE
elif (( $PATCH > $LAST_PATCH )); then
    echo "[OK] Increasing PATCH version"
    exit $EXIT_CODE
else
    echo "[ERROR] Version number has not increased relative to $LAST_VERSION"
    exit 1
fi
