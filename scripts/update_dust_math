#!/usr/bin/env Rscript

## Missing: beta
## TODO: tgamma?
fn1 <- c("round", "ceil", "floor", "trunc", "sqrt",
         "exp", "expm1", "log", "log2", "log10", "log1p",
         "cos", "sin", "tan",
         "acos", "asin", "atan",
         "cosh", "sinh", "tanh",
         "acosh", "asinh", "atanh")
fn2 <- c("atan2")

template1 <- "template <typename T>
__host__ __device__
T {{name}}(T x) {
  return std::{{name}}(x);
}

#ifdef __CUDA_ARCH__
template <>
__device__
inline float {{name}}(float x) {
  return ::{{name}}f(x);
}
#endif"

template2 <- "template <typename T>
__host__ __device__
T {{name}}(T x, T y) {
  return std::{{name}}(x, y);
}

#ifdef __CUDA_ARCH__
template <>
__device__
inline float {{name}}(float x, float y) {
  return ::{{name}}f(x, y);
}
#endif"

glue_whisker <- function(template, data) {
  glue::glue(template, .envir = data, .open = "{{", .close = "}}",
             .trim = FALSE)
}

code <- c(
  lapply(fn1, function(name) glue_whisker(template1, list(name = name))),
  lapply(fn2, function(name) glue_whisker(template2, list(name = name))))

data <- list(header = "// Generated by scripts/update_dust_math - do not edit",
             functions = paste(unlist(code, FALSE, FALSE), collapse = "\n\n"))
root <- here::here()
dest <- file.path(root, "inst/include/dust/random/math.hpp")
template <- paste(
  readLines(file.path(root, "inst/template/math.hpp")),
  collapse = "\n")
writeLines(glue_whisker(template, data), dest)
